[{"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\index.js":"1","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\reportWebVitals.js":"2","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\App.js":"3","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\store.js":"4","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ErrorBoundary\\Error.js":"5","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\Header.js":"6","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\TableUsers.js":"7","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\routes\\AppRoutes.js":"8","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\actions\\userAction.js":"9","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\reducers\\rootReducer.js":"10","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ModalConfirm.js":"11","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ModalEditUser.js":"12","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ModalAddNew.js":"13","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\services\\UserService.js":"14","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\Home.js":"15","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\routes\\PrivateRoute.js":"16","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\routes\\NotFound.js":"17","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\Login.js":"18","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\reducers\\userReducer.js":"19","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\services\\customize-axios.js":"20"},{"size":1017,"mtime":1686724601748,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1686724601749,"results":"23","hashOfConfig":"22"},{"size":1136,"mtime":1686724601746,"results":"24","hashOfConfig":"22"},{"size":306,"mtime":1686724601749,"results":"25","hashOfConfig":"22"},{"size":746,"mtime":1686724601746,"results":"26","hashOfConfig":"22"},{"size":2939,"mtime":1686724601747,"results":"27","hashOfConfig":"22"},{"size":13069,"mtime":1686724601748,"results":"28","hashOfConfig":"22"},{"size":979,"mtime":1686724601749,"results":"29","hashOfConfig":"22"},{"size":1427,"mtime":1686724601749,"results":"30","hashOfConfig":"22"},{"size":185,"mtime":1686724601749,"results":"31","hashOfConfig":"22"},{"size":1850,"mtime":1686724601747,"results":"32","hashOfConfig":"22"},{"size":3131,"mtime":1686724601748,"results":"33","hashOfConfig":"22"},{"size":3052,"mtime":1686724601747,"results":"34","hashOfConfig":"22"},{"size":620,"mtime":1686724601750,"results":"35","hashOfConfig":"22"},{"size":1183,"mtime":1686724601747,"results":"36","hashOfConfig":"22"},{"size":732,"mtime":1686724601750,"results":"37","hashOfConfig":"22"},{"size":126,"mtime":1686724601750,"results":"38","hashOfConfig":"22"},{"size":4076,"mtime":1686724601747,"results":"39","hashOfConfig":"22"},{"size":1924,"mtime":1686724601749,"results":"40","hashOfConfig":"22"},{"size":1533,"mtime":1686724601750,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q8lz7n",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\index.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\reportWebVitals.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\App.js",["88"],"import './style/App.scss';\r\nimport './component/Header';\r\nimport './component/TableUsers';\r\nimport Header from './component/Header';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {ToastContainer } from 'react-toastify';\r\nimport { useEffect} from 'react';\r\nimport AppRoutes from './routes/AppRoutes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { handleRefresh } from './redux/actions/userAction';\r\n\r\nfunction App() {\r\n  \r\n  // console.log(\">>> user: \", user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect (() => {\r\n    if(localStorage.getItem(\"token\")) {\r\n      dispatch(handleRefresh());\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-container\">\r\n        <Header/>\r\n        <Container>\r\n          <AppRoutes/>\r\n        </Container>\r\n\r\n        \r\n      </div>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\store.js",["89"],"import { createStore, applyMiddleware  } from 'redux';\r\n\r\nimport rootReducer from '../redux/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store  = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ErrorBoundary\\Error.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\Header.js",["90","91","92"],"import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport logoApp from '../assets/images/logo192.png';\r\nimport { NavLink, useNavigate} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {handleLogoutRedux} from '../redux/actions/userAction';\r\nimport { useEffect } from 'react';\r\n\r\nconst Header = (props) => {\r\n    // const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    const user = useSelector(state => state.user.account);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch(handleLogoutRedux());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( user && user.auth === false && window.location.pathname !== '/login') {\r\n            navigate(\"/\");\r\n            toast.success(\"logout successfully!\")\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            src={logoApp}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                            alt=\"React Bootstrap logo\"\r\n                        />\r\n                        <span> Hoangg Hiepp West NA </span>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    {(user && user.auth || window.location.pathname === '/') && \r\n                        <>\r\n                            <Nav className=\"me-auto\" >\r\n                                <NavLink to=\"/\" className=\"nav-link\" >Home</NavLink>\r\n                                <NavLink to=\"/users\" className=\"nav-link\" >Manage Users</NavLink>\r\n                            </Nav>\r\n                            <Nav>\r\n                                {user && user.email && <span className=\"nav-link\">Welcome <b>{user.email}</b> </span>}\r\n                                <NavDropdown title=\"Setting\">\r\n                                    {user && user.auth === true \r\n                                        ? <NavDropdown.Item onClick={() => handleLogout()}>Logout</NavDropdown.Item> \r\n                                        : <NavLink to=\"/login\" className=\"dropdown-item\">Login</NavLink>\r\n                                    }\r\n                                    \r\n                                </NavDropdown>\r\n                            </Nav>\r\n                        </>\r\n                    }\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\TableUsers.js",["93","94","95","96","97","98","99"],"import {useEffect, useState } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport {fetchAllUser} from '../services/UserService';\r\nimport ReactPaginate from 'react-paginate';\r\nimport ModalAddNew from './ModalAddNew';\r\nimport ModalEditUser from './ModalEditUser';\r\nimport ModalConfirm from './ModalConfirm';\r\nimport _ from 'lodash';\r\nimport '../style/TableUser.scss';\r\nimport {debounce} from \"lodash\";\r\nimport { CSVLink} from \"react-csv\";\r\nimport Papa from \"papaparse\";\r\nimport {toast} from 'react-toastify';\r\n\r\nconst TableUsers = (props) => {\r\n\r\n    const [listUsers, setListUsers] = useState([]); \r\n\r\n    const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    const [isShowModalAddNew, setIsShowModalAddNew] = useState(false); \r\n\r\n    const [isShowModalEdit, setIsShowModalEdit] = useState(false);\r\n\r\n    const [dataUserEdit, setDataUserEdit] = useState({});\r\n\r\n    const [isShowModalDelete, setIsShowModalDelete] = useState(false);\r\n\r\n    const [dataUserDelete, setDataUserDelete] = useState({});\r\n\r\n    const [sortBy, setSortBy] = useState(\"asc\");\r\n    // asc | desc : sắp xếp theo kiểu tăng dần và giảm dần \r\n\r\n    const [sortField, setSortField] = useState(\"id\");\r\n\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    const [dataExport, setDataExport] = useState([]);\r\n \r\n    const handleClose = () => {\r\n        setIsShowModalAddNew(false);\r\n        setIsShowModalEdit(false);\r\n        setIsShowModalDelete(false);\r\n    }\r\n\r\n    const handleUpdateTable = (user) => {\r\n        setListUsers([user, ...listUsers]);\r\n    }\r\n\r\n    const handleEditUserFromModal = (user) => {\r\n\r\n        let cloneListUsers = _.cloneDeep(listUsers);\r\n        let index = listUsers.findIndex(item => item.id === user.id);\r\n        cloneListUsers[index].first_name = user.first_name;\r\n        setListUsers(cloneListUsers);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //call apis\r\n        getUsers(1);\r\n    }, []);\r\n\r\n    const getUsers = async (page) => {\r\n        let res = await fetchAllUser(page);\r\n\r\n        if(res && res.data) {\r\n            // console.log(res)\r\n            setTotalUsers(res.total);\r\n            setListUsers(res.data);\r\n            setTotalPages(res.total_pages);\r\n        }\r\n    }\r\n\r\n    const handlePageClick = (event) => {\r\n        // console.log(\"event lib:\", event)\r\n        getUsers(+event.selected + 1);\r\n    }\r\n\r\n    const handleEditUser = (user) => {\r\n        setDataUserEdit(user);\r\n        setIsShowModalEdit(true);\r\n    }\r\n\r\n    const handleDeleteUser = (user) => {\r\n        setIsShowModalDelete(true);\r\n        setDataUserDelete(user);\r\n        // console.log(user)\r\n    }\r\n\r\n    const handleDeleteUserFromModal = (user) => {\r\n        let cloneListUsers = _.cloneDeep(listUsers);\r\n        cloneListUsers = cloneListUsers.filter( item => item.id !== user.id);\r\n        setListUsers(cloneListUsers);\r\n    }\r\n\r\n    const handleSort = (sortBy, sortField) => {\r\n        setSortBy(sortBy);\r\n        setSortField(sortField);\r\n\r\n        let cloneListUsers = _.cloneDeep(listUsers);\r\n        cloneListUsers = _.orderBy(cloneListUsers, [sortField], [sortBy]);\r\n        setListUsers(cloneListUsers);\r\n\r\n        console.log(cloneListUsers);\r\n    }\r\n\r\n    // console.log ( \"check sort\", sortBy, sortField)\r\n    \r\n    const handleSearch = debounce((event) => {\r\n        // console.log(event.target.value)\r\n        let term = event.target.value;\r\n        // console.log(\">>> run search term...\" , term)\r\n        if(term) {\r\n            let cloneListUsers = _.cloneDeep(listUsers);\r\n            cloneListUsers = cloneListUsers.filter(item => item.email.includes(term))\r\n            setListUsers(cloneListUsers);\r\n        } else {\r\n            getUsers(1);\r\n        }\r\n    }, 500)\r\n\r\n    const getUsersExport = (event, done) => {\r\n        let result = [];\r\n        if (listUsers && listUsers.length > 0) {\r\n            result.push([\"Id\", \"Email\", \"First Name\", \"Last Name\"])\r\n            listUsers.map((item, index) => {\r\n                let arr = [];\r\n                arr[0] = item.id;\r\n                arr[1] = item.email;\r\n                arr[2] = item.first_name;\r\n                arr[3] = item.last_name;\r\n                result.push(arr);\r\n            })\r\n\r\n            setDataExport(result);\r\n            done();\r\n        }\r\n    }\r\n\r\n    const handleImportCSV = (event) => {\r\n        if(event.target && event.target.files && event.target.files[0] ) {\r\n            let file = event.target.files[0];\r\n\r\n            if (file.type !== \"text/csv\") {\r\n                toast.error(\"Only accept cvs files...\");\r\n                return \r\n            }\r\n            \r\n            Papa.parse(file, {\r\n                // header: true, \r\n                complete: function(results) {\r\n                    let rawCSV = results.data;\r\n                    if (rawCSV.length > 0) {\r\n                        \r\n                        if(rawCSV[0] && rawCSV[0].length > 0) {\r\n                            if(rawCSV[0][0] !== \"email\"\r\n                                || rawCSV[0][1] !== \"first_name\"\r\n                                || rawCSV[0][2] !== \"last_name\") {\r\n                                    toast.error (\"Wrong format header CSV file!\")\r\n                                } else {\r\n                                    // console.log(rawCSV)\r\n\r\n                                    let result = [];\r\n\r\n                                    rawCSV.map((item, index) => {\r\n                                        if (index > 0 && item.length === 3) {\r\n                                            let obj = {}\r\n                                            obj.email = item[0]\r\n                                            obj.first_name = item[1] \r\n                                            obj.last_name = item[2] \r\n                                            result.push(obj);\r\n                                        }\r\n                                    })\r\n                                    setListUsers(result)\r\n                                    console.log (\"check >>>\", result);\r\n                                }\r\n                            \r\n                        } else {\r\n                            toast.error (\"Wrong format CSV file!\")\r\n                            \r\n                        }\r\n                        \r\n                    } else {\r\n                        toast.error(\"Not found data on CSV file\")\r\n                        // console.log(\"Finished:\", results.data);\r\n                    }\r\n                }\r\n            });\r\n            // console.log(\"check file upload\", file);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-3 d-sm-flex justify-content-between\">\r\n                <span ><b>List Users:</b></span>\r\n                <div className=\"group-btns mt-sm-0 mt-2\">\r\n                    <label htmlFor='test' className='btn btn-warning'>\r\n                        <i className=\"fa-solid fa-file-import\"></i> Import\r\n                    </label>\r\n                    <input \r\n                        id=\"test\" \r\n                        type=\"file\" hidden\r\n                        onChange={(event) => handleImportCSV(event)}\r\n                    />\r\n                    <CSVLink \r\n                        filename={\"users.csv\"}\r\n                        className=\"btn btn-primary\"\r\n                        data={dataExport}\r\n                        asyncOnClick={true}\r\n                        onClick={getUsersExport}\r\n                    >\r\n                        <i className=\"fa-solid fa-file-arrow-down\"></i> Export\r\n                    </CSVLink>\r\n\r\n                    {/* <CSVDownload data={csvData} target=\"_blank\" />; */}\r\n                    <button className=\"btn btn-success\" \r\n                        onClick={() => setIsShowModalAddNew(true)}>\r\n                        <i className=\"fa-solid fa-circle-plus\"></i> Add New User\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='col-12 col-sm-4 my-3'> \r\n                <input className='form-control' \r\n                    placeholder='Search user by email...'\r\n                    // value={keyword}\r\n                    onChange={(event) => handleSearch(event)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"customize-table\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <div className=\"sort-header\">\r\n                                    <span>ID</span>\r\n                                    <span>\r\n                                        <i \r\n                                            className=\"fa-solid fa-arrow-up\"\r\n                                            onClick = {() => handleSort(\"asc\", \"id\")}\r\n                                        ></i>\r\n                                        <i \r\n                                            className=\"fa-solid fa-arrow-down\"\r\n                                            onClick = {() => handleSort(\"desc\", \"id\")}\r\n                                        ></i>\r\n                                    </span>\r\n                                </div>\r\n                            </th>\r\n                            <th>Email</th>\r\n                            <th>\r\n                                <div className=\"sort-header\">\r\n                                    <span>First Name</span>\r\n                                    <span>\r\n                                        <i \r\n                                            className=\"fa-solid fa-arrow-up\"\r\n                                            onClick = {() => handleSort(\"asc\", \"first_name\")}\r\n                                        ></i>\r\n                                        <i \r\n                                            className=\"fa-solid fa-arrow-down\"\r\n                                            onClick = {() => handleSort(\"desc\", \"first_name\")}\r\n                                        ></i>\r\n                                    </span>\r\n                                </div>\r\n                            </th>\r\n                            <th>Last Name</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listUsers && listUsers.length > 0 && \r\n                        listUsers.map((item, index) => {\r\n                            return (\r\n                                <tr key={`users-${index}`}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.first_name}</td>\r\n                                    <td>{item.last_name}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-warning mx-3\"\r\n                                            onClick={() => handleEditUser(item)}\r\n                                        >Edit</button>\r\n                                        <button className=\"btn btn-danger\"\r\n                                            onClick={ () => handleDeleteUser(item)}>\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={totalPages}\r\n                previousLabel=\"< previous\"\r\n\r\n                pageClassName=\"page-item\"\r\n                pageLinkClassName=\"page-link\"\r\n                previousClassName=\"page-item\"\r\n                previousLinkClassName=\"page-link\"\r\n                nextClassName=\"page-item\"\r\n                nextLinkClassName=\"page-link\"\r\n                breakClassName=\"page-item\"\r\n                breakLinkClassName=\"page-link\"\r\n                containerClassName=\"pagination\"\r\n                activeClassName=\"active\"\r\n            />\r\n\r\n            <ModalAddNew\r\n                show={isShowModalAddNew}\r\n                handleClose = {handleClose}\r\n                handleUpdateTable={handleUpdateTable}\r\n            />\r\n\r\n            <ModalEditUser\r\n                show={isShowModalEdit}\r\n                dataUserEdit={dataUserEdit}\r\n                handleClose = {handleClose}\r\n                handleEditUserFromModal={handleEditUserFromModal}\r\n            />\r\n\r\n            <ModalConfirm\r\n                show={isShowModalDelete}\r\n                handleClose = {handleClose}\r\n                dataUserDelete = {dataUserDelete}\r\n                handleDeleteUserFromModal = {handleDeleteUserFromModal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableUsers;","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\routes\\AppRoutes.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\actions\\userAction.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\reducers\\rootReducer.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ModalConfirm.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ModalEditUser.js",["100"],"import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {useEffect, useState} from 'react';\r\nimport { putUpdateUser} from \"../services/UserService\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ModalEditUser = (props) => {\r\n\r\n    const {show, handleClose, dataUserEdit, handleEditUserFromModal } =  props;\r\n    const [name, setName] = useState(\"\");\r\n    const [job, setJob] = useState(\"\");\r\n\r\n    const handleEditUser = async () => {\r\n        let res = await putUpdateUser(name, job);\r\n        if (res && res.updatedAt) {\r\n            // success\r\n            handleEditUserFromModal({\r\n                first_name: name,\r\n                id: dataUserEdit.id\r\n            })\r\n\r\n            handleClose();\r\n            toast.success(\"Update user succeed!\")\r\n        }\r\n        // console.log(res);\r\n    }\r\n\r\n    useEffect (() => {\r\n        if(show) {\r\n            setName(dataUserEdit.first_name)\r\n        }\r\n\r\n    }, [dataUserEdit]);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Modal \r\n                show={show} \r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Edit A User</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"body-add-new\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label >Name:</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter Name\" \r\n                                value={name}\r\n                                onChange={(event) => setName(event.target.value)}\r\n                                />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label >Job:</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter Job\"\r\n                                value={job}\r\n                                onChange={(event) => setJob(event.target.value)}\r\n                                />\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => handleEditUser()}>\r\n                    Confirm\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalEditUser;\r\n\r\n","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\ModalAddNew.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\services\\UserService.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\Home.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\routes\\PrivateRoute.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\routes\\NotFound.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\component\\Login.js",["101"],"import {useEffect, useState} from 'react';\r\nimport '../style/Login.scss';\r\nimport {toast} from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {handleLoginRedux} from '../redux/actions/userAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch =  useDispatch();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isShowPassword, setIsShowPassword] = useState(false);\r\n\r\n    const isLoading = useSelector(state => state.user.isLoading);\r\n    const account = useSelector(state => state.user.account);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     let token = localStorage.getItem(\"token\");\r\n    //     if (token) {\r\n    //         navigate(\"/\");\r\n    //     }\r\n    // }, [])\r\n\r\n    const handleLogin = async () => {\r\n        // alert(\"me\");\r\n        if(!email || !password) {\r\n            toast.error(\"Email/Pasword is required!\");\r\n            return;\r\n        }\r\n\r\n        dispatch(handleLoginRedux(email, password));\r\n\r\n        // let res = await loginApi(email.trim(), password);\r\n        // // console.log(\"check login: \", res);\r\n        // if(res && res.token) {\r\n        //     loginContext(email, res.token);\r\n        //     navigate(\"/\");\r\n        //     toast.success(\"Login successful!\");\r\n        // } else {\r\n        //     if(res && res.status === 400) {\r\n        //         toast.error (res.data.error);\r\n        //     }\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate(\"/\");\r\n    }\r\n\r\n    const handlePressEnter = (event) => {\r\n        if ( event && event.key === \"Enter\" ) {\r\n            handleLogin();\r\n        }\r\n        // console.log(\" event:\", event)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (account && account.auth === true) {\r\n            navigate(\"/\");\r\n        }\r\n    },[account])\r\n\r\n    return (\r\n        <div className=\"login-container col-12 col-sm-4\">\r\n            <div className=\"title\">Login</div>\r\n            <div className=\"text\">Email or username ( eve.holt@reqres.in )</div>\r\n            <input \r\n                type='text' \r\n                placeholder='Email or username...'\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value) }\r\n            />\r\n            <div className=\"input-pass\"> \r\n                <input \r\n                    type={ isShowPassword === true ? \"text\" : \"password\"} \r\n                    placeholder='password'\r\n                    value={password}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                    onKeyDown={(event) => handlePressEnter(event)}\r\n                />\r\n                <i className={isShowPassword === true ? \"fa-solid fa-eye\" : \"fa-solid fa-eye-slash\"}\r\n                    onClick={() => setIsShowPassword(!isShowPassword)}\r\n                    // setIsShowPassword(!isShowPassword) dùng dấu chấm than để xét giá trị ngược lại với giá trị hiện tại\r\n                    // ví dụ: isShowPassword đang bằng false thì dùng dấu chấm than nó sẽ bằng true\r\n                ></i>\r\n            </div>\r\n            <button \r\n                className={email && password ? \"active\" : \"\"}\r\n                disabled={email && password ? false : true}\r\n                onClick={() => handleLogin()}\r\n            > \r\n                {isLoading && <i className=\"fas fa-circle-notch fa-spin\"></i>}\r\n                &nbsp;Login\r\n            </button>\r\n            {/* className={email && password ? \"active\" : \"\"} ý nghĩa của câu điều kiện này:\r\n                Nếu như có email và password thì nó sẽ thêm class \"active\" vào\r\n                còn nếu không có 1 trong 2 cũng như cả 2 thì class là trống */}\r\n            <div className=\"back\" onClick={() => handleGoBack()}>\r\n                <i className=\"fa-solid fa-angle-left\"></i>\r\n                &nbsp;Go back\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\redux\\reducers\\userReducer.js",[],"D:\\HOC_CUNG_HOI_DAN_IT\\practiceReact\\React-Practice\\src\\services\\customize-axios.js",[],{"ruleId":"102","severity":1,"message":"103","line":22,"column":6,"nodeType":"104","endLine":22,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":29},{"ruleId":"102","severity":1,"message":"110","line":29,"column":8,"nodeType":"104","endLine":29,"endColumn":14,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":47,"column":28,"nodeType":"114","messageId":"115","endLine":47,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":47,"column":41,"nodeType":"114","messageId":"115","endLine":47,"endColumn":43},{"ruleId":"106","severity":1,"message":"116","line":19,"column":12,"nodeType":"108","messageId":"109","endLine":19,"endColumn":22},{"ruleId":"106","severity":1,"message":"117","line":33,"column":12,"nodeType":"108","messageId":"109","endLine":33,"endColumn":18},{"ruleId":"106","severity":1,"message":"118","line":36,"column":12,"nodeType":"108","messageId":"109","endLine":36,"endColumn":21},{"ruleId":"106","severity":1,"message":"119","line":38,"column":12,"nodeType":"108","messageId":"109","endLine":38,"endColumn":19},{"ruleId":"106","severity":1,"message":"120","line":38,"column":21,"nodeType":"108","messageId":"109","endLine":38,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":129,"column":41,"nodeType":"123","messageId":"124","endLine":129,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":168,"column":62,"nodeType":"123","messageId":"124","endLine":168,"endColumn":64},{"ruleId":"102","severity":1,"message":"125","line":33,"column":8,"nodeType":"104","endLine":33,"endColumn":22,"suggestions":"126"},{"ruleId":"102","severity":1,"message":"110","line":68,"column":7,"nodeType":"104","endLine":68,"endColumn":16,"suggestions":"127"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["128"],"no-unused-vars","'composeWithDevTools' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["129"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'totalUsers' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'sortField' is assigned a value but never used.","'keyword' is assigned a value but never used.","'setKeyword' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'show'. Either include it or remove the dependency array.",["130"],["131"],{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [dispatch]",{"range":"140","text":"141"},"Update the dependencies array to be: [navigate, user]",{"range":"142","text":"143"},"Update the dependencies array to be: [dataUserEdit, show]",{"range":"144","text":"145"},"Update the dependencies array to be: [account, navigate]",{"range":"146","text":"147"},[631,633],"[dispatch]",[998,1004],"[navigate, user]",[961,975],"[dataUserEdit, show]",[1908,1917],"[account, navigate]"]