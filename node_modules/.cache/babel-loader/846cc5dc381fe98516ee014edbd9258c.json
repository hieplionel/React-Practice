{"ast":null,"code":"import axios from\"axios\";var instance=axios.create({baseURL:'https://reqres.in'});// Add a response interceptor\ninstance.interceptors.response.use(function(response){// Any status code that lie within the range of 2xx cause this function to trigger\n// Do something with response data\n// console.log(\"check res axios \", response);\nreturn response.data?response.data:{statusCode:response.status};},function(error){// Any status codes that falls outside the range of 2xx cause this function to trigger\n// Do something with response error\nvar res={};if(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nres.data=error.response.data;res.status=error.response.status;res.headers=error.response.headers;// console.log(error.response.data);\n// console.log(error.response.status);\n// console.log(error.response.headers);\n}else if(error.request){// The request was made but no response was received\n// `error.request` is an instance of XMLHttpRequest in the browser \n// and an instance of http.ClientRequest in node.js\nconsole.log(error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.log('Error',error.message);}return res;// return Promise.reject(error);\n});export default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","response","use","data","statusCode","status","error","res","headers","request","console","log","message"],"sources":["D:/HOC_CUNG_HOI_DAN_IT/practiceReact/React-Practice/src/services/customize-axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in'\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    // console.log(\"check res axios \", response);\r\n    return response.data ? response.data : { statusCode: response.status };\r\n  }, function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    let res = {};\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      res.data = error.response.data;\r\n      res.status = error.response.status;\r\n      res.headers = error.response.headers;\r\n\r\n      // console.log(error.response.data);\r\n      // console.log(error.response.status);\r\n      // console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      // `error.request` is an instance of XMLHttpRequest in the browser \r\n      // and an instance of http.ClientRequest in node.js\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n\r\n    return res;\r\n    // return Promise.reject(error);\r\n});\r\n\r\nexport default instance;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,QAAQ,CAAGD,KAAK,CAACE,MAAM,CAAC,CAC1BC,OAAO,CAAE,mBACb,CAAC,CAAC,CAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,SAAUD,QAAQ,CAAE,CACnD;AACA;AACA;AACA,MAAO,CAAAA,QAAQ,CAACE,IAAI,CAAGF,QAAQ,CAACE,IAAI,CAAG,CAAEC,UAAU,CAAEH,QAAQ,CAACI,MAAO,CAAC,CACxE,CAAC,CAAE,SAAUC,KAAK,CAAE,CAClB;AACA;AACA,GAAI,CAAAC,GAAG,CAAG,CAAC,CAAC,CACZ,GAAID,KAAK,CAACL,QAAQ,CAAE,CAClB;AACA;AACAM,GAAG,CAACJ,IAAI,CAAGG,KAAK,CAACL,QAAQ,CAACE,IAAI,CAC9BI,GAAG,CAACF,MAAM,CAAGC,KAAK,CAACL,QAAQ,CAACI,MAAM,CAClCE,GAAG,CAACC,OAAO,CAAGF,KAAK,CAACL,QAAQ,CAACO,OAAO,CAEpC;AACA;AACA;AACF,CAAC,IAAM,IAAIF,KAAK,CAACG,OAAO,CAAE,CACxB;AACA;AACA;AACAC,OAAO,CAACC,GAAG,CAACL,KAAK,CAACG,OAAO,CAAC,CAC5B,CAAC,IAAM,CACL;AACAC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEL,KAAK,CAACM,OAAO,CAAC,CACrC,CAEA,MAAO,CAAAL,GAAG,CACV;AACJ,CAAC,CAAC,CAEF,cAAe,CAAAV,QAAQ"},"metadata":{},"sourceType":"module"}